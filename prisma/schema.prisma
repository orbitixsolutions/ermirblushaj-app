// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  OWNER
  ADMIN
}

model User {
  id       String   @id @default(cuid())
  name     String?
  email    String?  @unique
  password String?
  role     UserRole @default(ADMIN)
}

model Team {
  id          String   @id @unique
  groupId     String?
  name        String
  logo        String?
  createdDate DateTime @default(now())

  group   Group?   @relation(fields: [groupId], references: [id])
  players Player[]
  goals   Goal[]

  teamA Match[] @relation("TeamA")
  teamB Match[] @relation("TeamB")

  teamStats   TeamStats?
  playerStats PlayerStats[]
}

model TeamStats {
  teamId         String @id @unique
  points         Int?   @default(0)
  goalsFor       Int?   @default(0)
  goalsAgainst   Int?   @default(0)
  goalDifference Int?   @default(0)

  team Team @relation(fields: [teamId], references: [id])
}

model Player {
  goals        Goal[]
  id           String   @id @unique
  teamId       String
  teamName     String?
  dateOfBirth  String?
  height       String?
  position     String?
  number       String?
  profilePhoto String?
  firstName    String
  lastName     String
  nationality  String?
  footed       String?
  createdDate  DateTime @default(now())

  player PlayerStats?
  team   Team         @relation(fields: [teamId], references: [id])
}

model PlayerStats {
  firstName String
  lastName  String
  playerId  String @id @unique
  goals     Int?   @default(0)
  teamId    String

  player Player @relation(fields: [playerId], references: [id])
  Team   Team?  @relation(fields: [teamId], references: [id])
}

model TournamentGallery {
  id        String   @id @unique
  url       String
  createdAt DateTime @default(now())
}

model TributeGallery {
  id        String   @id @unique
  url       String
  createdAt DateTime @default(now())
}

model Goal {
  id          String   @id @default(uuid())
  playerId    String
  teamId      String
  matchId     String
  createdDate DateTime @default(now())

  player Player @relation(fields: [playerId], references: [id])
  team   Team   @relation(fields: [teamId], references: [id])
  match  Match  @relation(fields: [matchId], references: [id])
}

model Match {
  id          String   @id @unique @default(uuid())
  teamAId     String
  teamBId     String
  teamA       Team     @relation("TeamA", fields: [teamAId], references: [id])
  teamB       Team     @relation("TeamB", fields: [teamBId], references: [id])
  playDate    String?
  createdDate DateTime @default(now())
  goals       Goal[]
}

model Group {
  id    String @id @unique @default(uuid())
  name  String
  teams Team[]
}
